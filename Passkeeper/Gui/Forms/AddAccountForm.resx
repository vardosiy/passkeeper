<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAKUDAAClAwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABAAAAA5AAAAZgAAAIoAAACfAAAApAAAAJkAAAB/AAAAVwAAACkAAAAHAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACEAAAB2AAAAyQAAAPIAAAD2AAAA6QAAANwAAADYAAAA4AAAAO4AAAD4AAAA6QAAALAAAABWAAAADwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAwAAABrAAAA2gAAAPoAAADIAAAAfgAAAEYAAAAmAAAAGAAAABYAAAAbAAAALwAAAFcAAACYAAAA4AAA
        APoAAAC7AAAAQgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAfAAAApgAAAPoAAADLAAAAXgAAABEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAkAAAAhQAAAOcAAADtAAAAdAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAJQAAAL8AAAD5AAAAjAAAABcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAANQAAAL8AAAD7AAAAigAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAD4AAAB+AAAA/gAAAP8AAAP/wAAH//AAH8=
</value>
  </data>
</root>